% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_mogClust.R
\name{fit_mogClust}
\alias{fit_mogClust}
\title{Fit multivariate outcome guided clustering model with EM algorithm}
\usage{
fit_mogClust(
  G,
  X,
  Y,
  gamma,
  Sigma,
  B,
  C,
  K,
  lambdaB,
  lambdaG.seq = NULL,
  runs = 200,
  quite = TRUE,
  alphaG = 0.5,
  seed = "fixed"
)
}
\arguments{
\item{G}{The matrix for omics data. Rows are samples and columns are omic features.}

\item{X}{The matrix for confounding variables. Rows are samples and columns are confounding
variables.}

\item{Y}{The matrix for multivariate outcomes. Rows are samples and columns are outcome
variables.}

\item{gamma}{Initial Gamma matrix (i.e., coefficients in the disease subtyping model).}

\item{Sigma}{Initial Sigma matrix (i.e., covariance matrix).}

\item{B}{Initial B matrix (i.e., intercept matrix in the outcome association model).}

\item{C}{Initial C matrix (i.e., common covariate effect in the outcome association model).}

\item{K}{Number of subtypes/clusters.}

\item{lambdaB}{A user speficied tunning parameter for outcome sparsity.}

\item{lambdaG.seq}{The tunning parameter for omics feature sparsity. If NULL, it will
automatically select the best lambdaG in each EM step by cross validation (i.e., using
cv.glmnet to fit the disease subtyping model). If a vector is provided, cross validation will
be restricted to these values. If a numeric value is provided, the disease subtyping model
will be fitted with this lambdaG without internal cross validation. Default is NULL.}

\item{runs}{The maximum number of EM updates, Default is 200.}

\item{quite}{Whether report the process of EM step. Default is TRUE.}

\item{alphaG}{The elasticnet mixing parameter. 1 is Lasso penalty and 0 is Ridge penalty.}

\item{seed}{"fixed" or a numeric value. "fixed" set seed for each run = r to be r. "random"
will result in random seeds.}
}
\value{
A list object
\itemize{
 \item{\code{gamma}}{fitted Gamme matrix}
 \item{\code{Sigma}}{fitted Sigma matrix}
 \item{\code{B}}{fitted B matrix}
 \item{\code{C}}{fitted C matrix}
 \item{\code{K}}{K}
 \item{\code{lambdaB}}{lambdaB}
 \item{\code{lambdaG_path}}{selected lambdaG along the updating steps}
 \item{\code{BIC}}{BIC}
 \item{\code{R2_RMSE_table}}{a table of R^2 and RMSE for each outcome}
 \item{\code{pred_prob}}{predicted probability for belonging to each subgroup}
 \item{\code{pred_lb}}{predicted subtype/cluster assignement}
 \item{\code{pred_outcome}} {prediced outcome matrix}
}
}
\description{
Fit multivariate outcome guided clustering model with EM algorithm
}
\examples{
\dontrun{
X = lung_1000G$X
G = lung_1000G$G
Y = lung_1000G$Y
K = 4
n = nrow(G)
np = ncol(X)
nq = ncol(Y)
NG = ncol(G)

set.seed(12345)
library(sparcl)
fit = lm(Y~X)
C = coef(fit)[-1,]
Y1 = Y-X\%*\%C
km.perm = KMeansSparseCluster.permute(Y1,K=K,nperms=20)
km.out = KMeansSparseCluster(Y1,K=K,wbounds=km.perm$bestw,nstart = 150)
Cs = km.out[[1]]$Cs
w_old = t(sapply(1:length(Cs), function(x){
a = rep(0,K)
a[Cs[x]] = 1
return(a)
}))
library(glmnet)
cvfit=cv.glmnet(x=G, y=w_old, family="multinomial", type.multinomial = "grouped", intercept=T,
 alpha = 0.5)
coef = coef(cvfit,s="lambda.1se")
gamma_new_matrix=sapply(1:K, function(x) as.numeric(coef[[x]]))[-1,]
gamma=sapply(1:K, function(x) gamma_new_matrix[,x]-gamma_new_matrix[,K])[,-K]
center.ls = lapply(1:K, function(k) apply(Y1[which(km.out[[1]]$Cs==k),],2,mean))
B = do.call(cbind,center.ls)
Sigma = diag(abs(rnorm(ncol(Y))),nrow = nq)
initials_list = list(B=B, C=C, Sigma=Sigma, gamma=gamma)
full_fit = fit_mogClust(G, X, Y, gamma = initials_list$gamma, Sigma = initials_list$Sigma,
B = initials_list$B, C = initials_list$C, =4, lambdaB = 0.002436381, lambdaG.seq=0.1507389,
runs = 200, quite=FALSE, alphaG = 0.5, seed = "fixed")
}
}
